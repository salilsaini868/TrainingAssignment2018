@model TrainingProject.Models.Training_selectCategory_Result

@{
    ViewBag.Title = "InsertCategory";
}

<link rel="stylesheet" type="text/css" href="~/Content/CategoryInsertStyle.css">
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.min.css">

<div class="container" id="div_main">
    <div class="row">
        <div class="col-md-12">
            <div id="div_header">
                @{
                    if (TempData["categoryid"] != null)
                    {
                        <h2>
                            Update Category
                        </h2>
                    }
                    else
                    {
                        <h2>
                            Insert Category
                        </h2>
                    }
                }
                <input type="button" class="btn btn-primary" title="Category list" value="Category List" id="text_link" onclick="window.location='@Url.Action("Listing", "Category")'" />
                <br><br>
            </div>
            @{
                if (TempData["falseID"] == null)
                {
                    <div id="InsertMsg">
                        @if (TempData["Message_CategoryInsert"] != null)
                        {
                            @TempData["Message_CategoryInsert"]
                        }

                        @if (TempData["Message_CategoryUpdate"] != null)
                        {
                            @TempData["Message_CategoryUpdate"]
                        }
                    </div>
                    <div id="form-style">
                        @using (Html.BeginForm("InsertCategory", "Category", FormMethod.Post, new { id = "form_category" }))
                        {
                            <div hidden>
                                @Html.HiddenFor(m => m.CategoryID, new { id = "category_id" })
                            </div>
                            <div>
                                <label for="category_name">Name </label>
                                @Html.TextBoxFor(m => m.CategoryName, new { maxlength = 20, autocomplete = "off", id = "category_name", @class = "search-input" })
                                <span hidden id="error_category_name" class="error">This field is required.</span>
                            </div>
                            <div>
                                <label for="category_description">Description </label>
                                @Html.TextAreaFor(m => m.CategoryDescription, new { maxlength = 60, autocomplete = "off", id = "category_description", @class = "search-input" })
                                <span hidden id="error_category_description" class="error">This field is required.</span>
                            </div>
                            <div>
                                <br>
                                <text>Check if the details are correct : &nbsp;</text>
                                @Html.CheckBoxFor(m => m.IsActive, new { id = "category_check" })
                            </div>
                            <div id="div_btn">
                                <button type="submit" value="Submit" class="btn" id="sub_btn" title="Submit">Submit</button>
                                <button type="reset" value="Reset" class="btn" id="res_btn" title="Reset">Reset</button>
                                <br>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div>
                        <h4>Category not found.</h4>
                    </div>
                }
            }
        </div>
    </div>
</div>



