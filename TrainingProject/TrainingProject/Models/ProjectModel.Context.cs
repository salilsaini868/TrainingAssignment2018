//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrainingProject.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RHPMEntities : DbContext
    {
        public RHPMEntities()
            : base("name=RHPMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Training_LoginTable> Training_LoginTable { get; set; }
        public virtual DbSet<Training_ProductCategories> Training_ProductCategories { get; set; }
    
        public virtual int Training_deleteCategory(Nullable<int> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Training_deleteCategory", categoryIDParameter);
        }
    
        public virtual int Training_insertCategory(Nullable<int> categoryID, string categoryName, string categoryDescription, Nullable<bool> isActive, Nullable<int> createdBy, Nullable<System.DateTime> createdDate, Nullable<int> modifiedBy, Nullable<System.DateTime> modifiedDate)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryDescriptionParameter = categoryDescription != null ?
                new ObjectParameter("CategoryDescription", categoryDescription) :
                new ObjectParameter("CategoryDescription", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Training_insertCategory", categoryIDParameter, categoryNameParameter, categoryDescriptionParameter, isActiveParameter, createdByParameter, createdDateParameter, modifiedByParameter, modifiedDateParameter);
        }
    
        public virtual ObjectResult<Training_ListCount_Result> Training_ListCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Training_ListCount_Result>("Training_ListCount");
        }
    
        public virtual ObjectResult<Training_searchCategory_Result> Training_searchCategory(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Training_searchCategory_Result>("Training_searchCategory", searchParameter);
        }
    
        public virtual ObjectResult<Training_selectCategory_Result> Training_selectCategory(Nullable<int> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Training_selectCategory_Result>("Training_selectCategory", categoryIDParameter);
        }
    
        public virtual ObjectResult<Training_selectUser_Result> Training_selectUser(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Training_selectUser_Result>("Training_selectUser", usernameParameter, passwordParameter);
        }
    }
}
